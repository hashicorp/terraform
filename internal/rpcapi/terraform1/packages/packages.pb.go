// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.15.6
// source: packages.proto

package packages

import (
	context "context"
	terraform1 "github.com/hashicorp/terraform/internal/rpcapi/terraform1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProviderPackageVersions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderPackageVersions) Reset() {
	*x = ProviderPackageVersions{}
	mi := &file_packages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderPackageVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderPackageVersions) ProtoMessage() {}

func (x *ProviderPackageVersions) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderPackageVersions.ProtoReflect.Descriptor instead.
func (*ProviderPackageVersions) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{0}
}

type FetchProviderPackage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchProviderPackage) Reset() {
	*x = FetchProviderPackage{}
	mi := &file_packages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchProviderPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchProviderPackage) ProtoMessage() {}

func (x *FetchProviderPackage) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchProviderPackage.ProtoReflect.Descriptor instead.
func (*FetchProviderPackage) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{1}
}

type ModulePackageVersions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModulePackageVersions) Reset() {
	*x = ModulePackageVersions{}
	mi := &file_packages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModulePackageVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModulePackageVersions) ProtoMessage() {}

func (x *ModulePackageVersions) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModulePackageVersions.ProtoReflect.Descriptor instead.
func (*ModulePackageVersions) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{2}
}

type ModulePackageSourceAddr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModulePackageSourceAddr) Reset() {
	*x = ModulePackageSourceAddr{}
	mi := &file_packages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModulePackageSourceAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModulePackageSourceAddr) ProtoMessage() {}

func (x *ModulePackageSourceAddr) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModulePackageSourceAddr.ProtoReflect.Descriptor instead.
func (*ModulePackageSourceAddr) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{3}
}

type FetchModulePackage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchModulePackage) Reset() {
	*x = FetchModulePackage{}
	mi := &file_packages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchModulePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchModulePackage) ProtoMessage() {}

func (x *FetchModulePackage) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchModulePackage.ProtoReflect.Descriptor instead.
func (*FetchModulePackage) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{4}
}

type ProviderPackageVersions_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceAddr    string                 `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderPackageVersions_Request) Reset() {
	*x = ProviderPackageVersions_Request{}
	mi := &file_packages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderPackageVersions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderPackageVersions_Request) ProtoMessage() {}

func (x *ProviderPackageVersions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderPackageVersions_Request.ProtoReflect.Descriptor instead.
func (*ProviderPackageVersions_Request) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ProviderPackageVersions_Request) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

type ProviderPackageVersions_Response struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Versions      []string                 `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	Diagnostics   []*terraform1.Diagnostic `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderPackageVersions_Response) Reset() {
	*x = ProviderPackageVersions_Response{}
	mi := &file_packages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderPackageVersions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderPackageVersions_Response) ProtoMessage() {}

func (x *ProviderPackageVersions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderPackageVersions_Response.ProtoReflect.Descriptor instead.
func (*ProviderPackageVersions_Response) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ProviderPackageVersions_Response) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ProviderPackageVersions_Response) GetDiagnostics() []*terraform1.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type FetchProviderPackage_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CacheDir      string                 `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	SourceAddr    string                 `protobuf:"bytes,2,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Platforms     []string               `protobuf:"bytes,4,rep,name=platforms,proto3" json:"platforms,omitempty"`
	Hashes        []string               `protobuf:"bytes,5,rep,name=hashes,proto3" json:"hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchProviderPackage_Request) Reset() {
	*x = FetchProviderPackage_Request{}
	mi := &file_packages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchProviderPackage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchProviderPackage_Request) ProtoMessage() {}

func (x *FetchProviderPackage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchProviderPackage_Request.ProtoReflect.Descriptor instead.
func (*FetchProviderPackage_Request) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FetchProviderPackage_Request) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *FetchProviderPackage_Request) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *FetchProviderPackage_Request) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FetchProviderPackage_Request) GetPlatforms() []string {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *FetchProviderPackage_Request) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type FetchProviderPackage_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Each requested platform will return a result in this list. The order
	// of the returned results will match the order of the requested
	// platforms. If the binary for a given platform could not be downloaded
	// there will still be an entry in the results with diagnostics
	// explaining why.
	Results       []*FetchProviderPackage_PlatformResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Diagnostics   []*terraform1.Diagnostic               `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchProviderPackage_Response) Reset() {
	*x = FetchProviderPackage_Response{}
	mi := &file_packages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchProviderPackage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchProviderPackage_Response) ProtoMessage() {}

func (x *FetchProviderPackage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchProviderPackage_Response.ProtoReflect.Descriptor instead.
func (*FetchProviderPackage_Response) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{1, 1}
}

func (x *FetchProviderPackage_Response) GetResults() []*FetchProviderPackage_PlatformResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *FetchProviderPackage_Response) GetDiagnostics() []*terraform1.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type FetchProviderPackage_PlatformResult struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Provider      *terraform1.ProviderPackage `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Diagnostics   []*terraform1.Diagnostic    `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchProviderPackage_PlatformResult) Reset() {
	*x = FetchProviderPackage_PlatformResult{}
	mi := &file_packages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchProviderPackage_PlatformResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchProviderPackage_PlatformResult) ProtoMessage() {}

func (x *FetchProviderPackage_PlatformResult) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchProviderPackage_PlatformResult.ProtoReflect.Descriptor instead.
func (*FetchProviderPackage_PlatformResult) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{1, 2}
}

func (x *FetchProviderPackage_PlatformResult) GetProvider() *terraform1.ProviderPackage {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *FetchProviderPackage_PlatformResult) GetDiagnostics() []*terraform1.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type ModulePackageVersions_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceAddr    string                 `protobuf:"bytes,2,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModulePackageVersions_Request) Reset() {
	*x = ModulePackageVersions_Request{}
	mi := &file_packages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModulePackageVersions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModulePackageVersions_Request) ProtoMessage() {}

func (x *ModulePackageVersions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModulePackageVersions_Request.ProtoReflect.Descriptor instead.
func (*ModulePackageVersions_Request) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ModulePackageVersions_Request) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

type ModulePackageVersions_Response struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Versions      []string                 `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	Diagnostics   []*terraform1.Diagnostic `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModulePackageVersions_Response) Reset() {
	*x = ModulePackageVersions_Response{}
	mi := &file_packages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModulePackageVersions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModulePackageVersions_Response) ProtoMessage() {}

func (x *ModulePackageVersions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModulePackageVersions_Response.ProtoReflect.Descriptor instead.
func (*ModulePackageVersions_Response) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ModulePackageVersions_Response) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ModulePackageVersions_Response) GetDiagnostics() []*terraform1.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type ModulePackageSourceAddr_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceAddr    string                 `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModulePackageSourceAddr_Request) Reset() {
	*x = ModulePackageSourceAddr_Request{}
	mi := &file_packages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModulePackageSourceAddr_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModulePackageSourceAddr_Request) ProtoMessage() {}

func (x *ModulePackageSourceAddr_Request) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModulePackageSourceAddr_Request.ProtoReflect.Descriptor instead.
func (*ModulePackageSourceAddr_Request) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ModulePackageSourceAddr_Request) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *ModulePackageSourceAddr_Request) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ModulePackageSourceAddr_Response struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Url           string                   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Diagnostics   []*terraform1.Diagnostic `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModulePackageSourceAddr_Response) Reset() {
	*x = ModulePackageSourceAddr_Response{}
	mi := &file_packages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModulePackageSourceAddr_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModulePackageSourceAddr_Response) ProtoMessage() {}

func (x *ModulePackageSourceAddr_Response) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModulePackageSourceAddr_Response.ProtoReflect.Descriptor instead.
func (*ModulePackageSourceAddr_Response) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ModulePackageSourceAddr_Response) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModulePackageSourceAddr_Response) GetDiagnostics() []*terraform1.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type FetchModulePackage_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CacheDir      string                 `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchModulePackage_Request) Reset() {
	*x = FetchModulePackage_Request{}
	mi := &file_packages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchModulePackage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchModulePackage_Request) ProtoMessage() {}

func (x *FetchModulePackage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchModulePackage_Request.ProtoReflect.Descriptor instead.
func (*FetchModulePackage_Request) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *FetchModulePackage_Request) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *FetchModulePackage_Request) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FetchModulePackage_Response struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Diagnostics   []*terraform1.Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchModulePackage_Response) Reset() {
	*x = FetchModulePackage_Response{}
	mi := &file_packages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchModulePackage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchModulePackage_Response) ProtoMessage() {}

func (x *FetchModulePackage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_packages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchModulePackage_Response.ProtoReflect.Descriptor instead.
func (*FetchModulePackage_Response) Descriptor() ([]byte, []int) {
	return file_packages_proto_rawDescGZIP(), []int{4, 1}
}

func (x *FetchModulePackage_Response) GetDiagnostics() []*terraform1.Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

var File_packages_proto protoreflect.FileDescriptor

var file_packages_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x10, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x2a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x1a,
	0x60, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x22, 0xd1, 0x03, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x97, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x44, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x1a, 0x98, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a,
	0x83, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x2a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x60, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0xb7, 0x01,
	0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x44, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x56, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x38, 0x0a,
	0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x38,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x44, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x32, 0x97,
	0x05, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x31, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x34, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x77, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_packages_proto_rawDescOnce sync.Once
	file_packages_proto_rawDescData []byte
)

func file_packages_proto_rawDescGZIP() []byte {
	file_packages_proto_rawDescOnce.Do(func() {
		file_packages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_packages_proto_rawDesc), len(file_packages_proto_rawDesc)))
	})
	return file_packages_proto_rawDescData
}

var file_packages_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_packages_proto_goTypes = []any{
	(*ProviderPackageVersions)(nil),             // 0: terraform1.packages.ProviderPackageVersions
	(*FetchProviderPackage)(nil),                // 1: terraform1.packages.FetchProviderPackage
	(*ModulePackageVersions)(nil),               // 2: terraform1.packages.ModulePackageVersions
	(*ModulePackageSourceAddr)(nil),             // 3: terraform1.packages.ModulePackageSourceAddr
	(*FetchModulePackage)(nil),                  // 4: terraform1.packages.FetchModulePackage
	(*ProviderPackageVersions_Request)(nil),     // 5: terraform1.packages.ProviderPackageVersions.Request
	(*ProviderPackageVersions_Response)(nil),    // 6: terraform1.packages.ProviderPackageVersions.Response
	(*FetchProviderPackage_Request)(nil),        // 7: terraform1.packages.FetchProviderPackage.Request
	(*FetchProviderPackage_Response)(nil),       // 8: terraform1.packages.FetchProviderPackage.Response
	(*FetchProviderPackage_PlatformResult)(nil), // 9: terraform1.packages.FetchProviderPackage.PlatformResult
	(*ModulePackageVersions_Request)(nil),       // 10: terraform1.packages.ModulePackageVersions.Request
	(*ModulePackageVersions_Response)(nil),      // 11: terraform1.packages.ModulePackageVersions.Response
	(*ModulePackageSourceAddr_Request)(nil),     // 12: terraform1.packages.ModulePackageSourceAddr.Request
	(*ModulePackageSourceAddr_Response)(nil),    // 13: terraform1.packages.ModulePackageSourceAddr.Response
	(*FetchModulePackage_Request)(nil),          // 14: terraform1.packages.FetchModulePackage.Request
	(*FetchModulePackage_Response)(nil),         // 15: terraform1.packages.FetchModulePackage.Response
	(*terraform1.Diagnostic)(nil),               // 16: terraform1.Diagnostic
	(*terraform1.ProviderPackage)(nil),          // 17: terraform1.ProviderPackage
}
var file_packages_proto_depIdxs = []int32{
	16, // 0: terraform1.packages.ProviderPackageVersions.Response.diagnostics:type_name -> terraform1.Diagnostic
	9,  // 1: terraform1.packages.FetchProviderPackage.Response.results:type_name -> terraform1.packages.FetchProviderPackage.PlatformResult
	16, // 2: terraform1.packages.FetchProviderPackage.Response.diagnostics:type_name -> terraform1.Diagnostic
	17, // 3: terraform1.packages.FetchProviderPackage.PlatformResult.provider:type_name -> terraform1.ProviderPackage
	16, // 4: terraform1.packages.FetchProviderPackage.PlatformResult.diagnostics:type_name -> terraform1.Diagnostic
	16, // 5: terraform1.packages.ModulePackageVersions.Response.diagnostics:type_name -> terraform1.Diagnostic
	16, // 6: terraform1.packages.ModulePackageSourceAddr.Response.diagnostics:type_name -> terraform1.Diagnostic
	16, // 7: terraform1.packages.FetchModulePackage.Response.diagnostics:type_name -> terraform1.Diagnostic
	5,  // 8: terraform1.packages.Packages.ProviderPackageVersions:input_type -> terraform1.packages.ProviderPackageVersions.Request
	7,  // 9: terraform1.packages.Packages.FetchProviderPackage:input_type -> terraform1.packages.FetchProviderPackage.Request
	10, // 10: terraform1.packages.Packages.ModulePackageVersions:input_type -> terraform1.packages.ModulePackageVersions.Request
	12, // 11: terraform1.packages.Packages.ModulePackageSourceAddr:input_type -> terraform1.packages.ModulePackageSourceAddr.Request
	14, // 12: terraform1.packages.Packages.FetchModulePackage:input_type -> terraform1.packages.FetchModulePackage.Request
	6,  // 13: terraform1.packages.Packages.ProviderPackageVersions:output_type -> terraform1.packages.ProviderPackageVersions.Response
	8,  // 14: terraform1.packages.Packages.FetchProviderPackage:output_type -> terraform1.packages.FetchProviderPackage.Response
	11, // 15: terraform1.packages.Packages.ModulePackageVersions:output_type -> terraform1.packages.ModulePackageVersions.Response
	13, // 16: terraform1.packages.Packages.ModulePackageSourceAddr:output_type -> terraform1.packages.ModulePackageSourceAddr.Response
	15, // 17: terraform1.packages.Packages.FetchModulePackage:output_type -> terraform1.packages.FetchModulePackage.Response
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_packages_proto_init() }
func file_packages_proto_init() {
	if File_packages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_packages_proto_rawDesc), len(file_packages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_packages_proto_goTypes,
		DependencyIndexes: file_packages_proto_depIdxs,
		MessageInfos:      file_packages_proto_msgTypes,
	}.Build()
	File_packages_proto = out.File
	file_packages_proto_goTypes = nil
	file_packages_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PackagesClient is the client API for Packages service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PackagesClient interface {
	ProviderPackageVersions(ctx context.Context, in *ProviderPackageVersions_Request, opts ...grpc.CallOption) (*ProviderPackageVersions_Response, error)
	FetchProviderPackage(ctx context.Context, in *FetchProviderPackage_Request, opts ...grpc.CallOption) (*FetchProviderPackage_Response, error)
	ModulePackageVersions(ctx context.Context, in *ModulePackageVersions_Request, opts ...grpc.CallOption) (*ModulePackageVersions_Response, error)
	ModulePackageSourceAddr(ctx context.Context, in *ModulePackageSourceAddr_Request, opts ...grpc.CallOption) (*ModulePackageSourceAddr_Response, error)
	FetchModulePackage(ctx context.Context, in *FetchModulePackage_Request, opts ...grpc.CallOption) (*FetchModulePackage_Response, error)
}

type packagesClient struct {
	cc grpc.ClientConnInterface
}

func NewPackagesClient(cc grpc.ClientConnInterface) PackagesClient {
	return &packagesClient{cc}
}

func (c *packagesClient) ProviderPackageVersions(ctx context.Context, in *ProviderPackageVersions_Request, opts ...grpc.CallOption) (*ProviderPackageVersions_Response, error) {
	out := new(ProviderPackageVersions_Response)
	err := c.cc.Invoke(ctx, "/terraform1.packages.Packages/ProviderPackageVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packagesClient) FetchProviderPackage(ctx context.Context, in *FetchProviderPackage_Request, opts ...grpc.CallOption) (*FetchProviderPackage_Response, error) {
	out := new(FetchProviderPackage_Response)
	err := c.cc.Invoke(ctx, "/terraform1.packages.Packages/FetchProviderPackage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packagesClient) ModulePackageVersions(ctx context.Context, in *ModulePackageVersions_Request, opts ...grpc.CallOption) (*ModulePackageVersions_Response, error) {
	out := new(ModulePackageVersions_Response)
	err := c.cc.Invoke(ctx, "/terraform1.packages.Packages/ModulePackageVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packagesClient) ModulePackageSourceAddr(ctx context.Context, in *ModulePackageSourceAddr_Request, opts ...grpc.CallOption) (*ModulePackageSourceAddr_Response, error) {
	out := new(ModulePackageSourceAddr_Response)
	err := c.cc.Invoke(ctx, "/terraform1.packages.Packages/ModulePackageSourceAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packagesClient) FetchModulePackage(ctx context.Context, in *FetchModulePackage_Request, opts ...grpc.CallOption) (*FetchModulePackage_Response, error) {
	out := new(FetchModulePackage_Response)
	err := c.cc.Invoke(ctx, "/terraform1.packages.Packages/FetchModulePackage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PackagesServer is the server API for Packages service.
type PackagesServer interface {
	ProviderPackageVersions(context.Context, *ProviderPackageVersions_Request) (*ProviderPackageVersions_Response, error)
	FetchProviderPackage(context.Context, *FetchProviderPackage_Request) (*FetchProviderPackage_Response, error)
	ModulePackageVersions(context.Context, *ModulePackageVersions_Request) (*ModulePackageVersions_Response, error)
	ModulePackageSourceAddr(context.Context, *ModulePackageSourceAddr_Request) (*ModulePackageSourceAddr_Response, error)
	FetchModulePackage(context.Context, *FetchModulePackage_Request) (*FetchModulePackage_Response, error)
}

// UnimplementedPackagesServer can be embedded to have forward compatible implementations.
type UnimplementedPackagesServer struct {
}

func (*UnimplementedPackagesServer) ProviderPackageVersions(context.Context, *ProviderPackageVersions_Request) (*ProviderPackageVersions_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProviderPackageVersions not implemented")
}
func (*UnimplementedPackagesServer) FetchProviderPackage(context.Context, *FetchProviderPackage_Request) (*FetchProviderPackage_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchProviderPackage not implemented")
}
func (*UnimplementedPackagesServer) ModulePackageVersions(context.Context, *ModulePackageVersions_Request) (*ModulePackageVersions_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModulePackageVersions not implemented")
}
func (*UnimplementedPackagesServer) ModulePackageSourceAddr(context.Context, *ModulePackageSourceAddr_Request) (*ModulePackageSourceAddr_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModulePackageSourceAddr not implemented")
}
func (*UnimplementedPackagesServer) FetchModulePackage(context.Context, *FetchModulePackage_Request) (*FetchModulePackage_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchModulePackage not implemented")
}

func RegisterPackagesServer(s *grpc.Server, srv PackagesServer) {
	s.RegisterService(&_Packages_serviceDesc, srv)
}

func _Packages_ProviderPackageVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProviderPackageVersions_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackagesServer).ProviderPackageVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.packages.Packages/ProviderPackageVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackagesServer).ProviderPackageVersions(ctx, req.(*ProviderPackageVersions_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Packages_FetchProviderPackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchProviderPackage_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackagesServer).FetchProviderPackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.packages.Packages/FetchProviderPackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackagesServer).FetchProviderPackage(ctx, req.(*FetchProviderPackage_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Packages_ModulePackageVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModulePackageVersions_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackagesServer).ModulePackageVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.packages.Packages/ModulePackageVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackagesServer).ModulePackageVersions(ctx, req.(*ModulePackageVersions_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Packages_ModulePackageSourceAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModulePackageSourceAddr_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackagesServer).ModulePackageSourceAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.packages.Packages/ModulePackageSourceAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackagesServer).ModulePackageSourceAddr(ctx, req.(*ModulePackageSourceAddr_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Packages_FetchModulePackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchModulePackage_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackagesServer).FetchModulePackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.packages.Packages/FetchModulePackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackagesServer).FetchModulePackage(ctx, req.(*FetchModulePackage_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Packages_serviceDesc = grpc.ServiceDesc{
	ServiceName: "terraform1.packages.Packages",
	HandlerType: (*PackagesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProviderPackageVersions",
			Handler:    _Packages_ProviderPackageVersions_Handler,
		},
		{
			MethodName: "FetchProviderPackage",
			Handler:    _Packages_FetchProviderPackage_Handler,
		},
		{
			MethodName: "ModulePackageVersions",
			Handler:    _Packages_ModulePackageVersions_Handler,
		},
		{
			MethodName: "ModulePackageSourceAddr",
			Handler:    _Packages_ModulePackageSourceAddr_Handler,
		},
		{
			MethodName: "FetchModulePackage",
			Handler:    _Packages_FetchModulePackage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "packages.proto",
}
